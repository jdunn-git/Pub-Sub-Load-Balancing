# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for *************
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/bionic64"

  config.vm.provision "file",
  source: "assignment_executor.py",
  destination: "/tmp/"

  config.vm.provision "file",
  source: "broker.py",
  destination: "/tmp/"

  config.vm.provision "file",
  source: "mr_topology.py",
  destination: "/tmp/"

  config.vm.provision "file",
  source: "publisher.py",
  destination: "/tmp/"

  config.vm.provision "file",
  source: "subscriber.py",
  destination: "/tmp/"

  config.vm.provision "file",
  source: "zmq_api.py",
  destination: "/tmp/"


  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    #   # Display the VirtualBox GUI when booting the machine
    vb.gui = true
    #   # Customize the amount of memory on the VM:
    vb.memory = "2048"
  end

    # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision :shell do |sh|
  #   sh.path = "shell_script.sh"
  # end

  # View the documentation for the provider you are using for more
  # information on available options.
  $script = <<-SCRIPT
  sudo apt-get update && sudo apt-get upgrade -y
  sudo apt-get install python3-pip python-zmq -y
  sudo pip3 install pyzmq tornado pandas
  sudo apt-get install mininet -y
  git clone https://github.com/mininet/mininet.git
  mininet/util/install.sh -a
  sudo pip3 install mininet
  mkdir -p /tmp/assignment_output/
SCRIPT
config.vm.provision "shell", inline: $script, privileged: false
end

#ansible cloudvm -m ping -u cc
